<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:component-scan base-package="org.edge.woostore.core.service"></context:component-scan>
	<context:component-scan base-package="org.edge.woostore.core.service.impl"></context:component-scan>
	<context:component-scan base-package="org.edge.woostore.persist.dao"></context:component-scan>
	<context:component-scan base-package="org.edge.woostore.persist.dao.impl"></context:component-scan>
	<context:component-scan base-package="org.edge.woostore.utils.util"></context:component-scan>
	<context:component-scan base-package="org.edge.woostore.core.aspect"></context:component-scan>
	<context:annotation-config></context:annotation-config>
	<!--aop -->
	<!--      扫描注解bean -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<bean id="propertyConfigurer"
		  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/properties/dbconfig.properties</value>
				<value>classpath:/properties/hibernate.properties</value>
				<value>classpath:/properties/redis.properties</value>
			</list>
		</property>
	</bean>
	<bean id="DataSource" class="org.apache.commons.dbcp.BasicDataSource"
		  destroy-method="close">
		<property name="driverClassName" value="${oracle.driverClassName}"/>
		<property name="url" value="${oracle.url}"/>
		<property name="username" value="${username}"/>
		<property name="password" value="${password}"/>
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${minIdle}"></property>
		<property name="defaultAutoCommit" value="true" />
	</bean>
	<!-- 配置SessionFactory -->
	<bean id="sessionFactory"
		  class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 向SessionFactory中注入数据源 -->
		<property name="dataSource" ref="DataSource" />
		<property name="hibernateProperties">
			<props>
				<!-- 定义Hibernate的方言 -->
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				 <prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- 控制台显示SQL -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<!-- 使用SQL注释 -->
				<prop key="hibernate.use_sql_comments">true</prop>
			</props>
		</property>
		<!-- 浏览entitys包下的所有使用Hibernate注解的JavaBean -->
		<property name="packagesToScan">
			<list>
				<value>org.edge.woostore.domain.entity</value>
			</list>
		</property>
	</bean>

	<bean id="transactionManager"
		  class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 事物配置的模板-偷的 -->
	<!-- 定义个通知，指定事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"
					   rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false"
					   rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false"
					   rollback-for="java.lang.Exception" />
			<tx:method name="load*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>


	<!-- 连接池配置  最大连接数 最大空闲数  最长等待时间 连接是否可用-->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.maxActive}" />
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
		<property name="testOnReturn" value="${redis.testOnReturn}" />
		<property name="blockWhenExhausted" value="${redis.blockWhenExhausted}" />
	</bean>
	<bean id="jedisShardInfo1" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg index="0" value="${redis.host}" />
		<constructor-arg index="1" value="${redis.port}" type="int" />
		<constructor-arg index="2" value="${redis.instance}"/>
	</bean>
	<bean id="jedisShardInfo2" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg index="0" value="${redis.host2}" />
		<constructor-arg index="1" value="${redis.port2}" type="int"/>
		<constructor-arg index="2" value="${redis.instance2}"/>
	</bean>
	<bean id="jedisShardInfo3" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg index="0" value="${redis.host3}" />
		<constructor-arg index="1" value="${redis.port3}" type="int"/>
		<constructor-arg index="2" value="${redis.instance3}"/>
	</bean>
	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1">
			<list>
				<ref bean="jedisShardInfo1"/>
				<ref bean="jedisShardInfo2"/>
				<ref bean="jedisShardInfo3"/>
			</list>
		</constructor-arg>
	</bean>
	<!--同步sentinel的信息，将主从信息同步到客户端来-->
	<!--<bean class="redis.clients.jedis.JedisSentinelPool">
		<constructor-arg index="0" value="mymaster"/>
		<constructor-arg index="1">
			<set>
				<value>${redis.sentinel.host}</value>
			</set>
		</constructor-arg>
		<constructor-arg index="2" ref="jedisPoolConfig"/>
	</bean>-->
	<!-- 分片池 end -->
	<!-- redis服务器中心 -->
	<bean id="connectionFactory"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >
		<property name="poolConfig" ref="jedisPoolConfig" />
		<property name="port" value="${redis.port}" />
		<property name="hostName" value="${redis.host}" />
		<!--<property name="password" value="${redis.password}" />-->
		<property name="timeout" value="${redis.timeout}" ></property>
	</bean >
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="keySerializer" >
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer" >
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
	</bean >
</beans>